@model GameTracker.Models.VideoGameModel.VideoGameEdit

@{
    ViewBag.Title = "Edit a Video Game";
}
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
<h2>Edit a Video Game</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>VideoGameEdit</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.VideoGameID)

    <div class="form-group">
        @Html.LabelFor(model => model.VideoGameName, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-md-6">
            @Html.EditorFor(model => model.VideoGameName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VideoGameName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VideoGameGenre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.VideoGameGenre, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VideoGameGenre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VideoGameNotes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VideoGameNotes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VideoGameNotes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TimesBeat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TimesBeat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TimesBeat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { }, htmlAttributes: new { @class = "btn" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
